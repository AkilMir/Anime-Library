{"ast":null,"code":"var _jsxFileName = \"/Users/shaun/Documents/Hacks-Project/anime-library/src/App.js\";\nimport { useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  /*  const searchMovies = async (title) => {\n     const response = await fetch(`${API_URL}&query=${title}`);\n     const data = await response.json();\n     \n   } \n     \n   useEffect(() => {\n     searchMovies('Naruto');\n   }, []); */\n\n  const headers = {\n    'X-MAL-CLIENT-ID': '041aaa9e068b55ee57358403438e841f'\n  };\n  const client_id = '041aaa9e068b55ee57358403438e841f';\n  const API_URL = 'https://api.myanimelist.net/v2/anime/?fields=rank,mean,alternative_titles>';\n  fetch(API_URL, {\n    headers\n  }).then(response => response.json()).then(data => this.setState({\n    totalReactPackages: data.total\n  }));\n\n  // Use the data in your component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(data, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","App","headers","client_id","API_URL","fetch","then","response","json","data","setState","totalReactPackages","total","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shaun/Documents/Hacks-Project/anime-library/src/App.js"],"sourcesContent":["import { useEffect } from 'react';\nimport './App.css';\n\n\n\n\n\nfunction App() {\n /*  const searchMovies = async (title) => {\n    const response = await fetch(`${API_URL}&query=${title}`);\n    const data = await response.json();\n    \n  } \n    \n  useEffect(() => {\n    searchMovies('Naruto');\n  }, []); */\n  \nconst headers = {'X-MAL-CLIENT-ID': '041aaa9e068b55ee57358403438e841f'}\nconst client_id = '041aaa9e068b55ee57358403438e841f';\nconst API_URL = 'https://api.myanimelist.net/v2/anime/?fields=rank,mean,alternative_titles>'\n    fetch(API_URL, { headers })\n    .then(response => response.json())\n    .then(data => this.setState({ totalReactPackages: data.total }));\n  \n    // Use the data in your component\n    return (\n      <div>\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      </div>\n    );\n  \n\n  return (\n    <div >\n      <header >\n        \n        <p>\n          \n        </p>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMnB,SAASC,GAAGA,CAAA,EAAG;EACd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA,MAAMC,OAAO,GAAG;IAAC,iBAAiB,EAAE;EAAkC,CAAC;EACvE,MAAMC,SAAS,GAAG,kCAAkC;EACpD,MAAMC,OAAO,GAAG,4EAA4E;EACxFC,KAAK,CAACD,OAAO,EAAE;IAAEF;EAAQ,CAAC,CAAC,CAC1BI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI,IAAI,CAACC,QAAQ,CAAC;IAAEC,kBAAkB,EAAEF,IAAI,CAACG;EAAM,CAAC,CAAC,CAAC;;EAEhE;EACA,oBACEZ,OAAA;IAAAa,QAAA,eACEb,OAAA;MAAAa,QAAA,EAAMC,IAAI,CAACC,SAAS,CAACN,IAAI,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;EAIV,oBACEnB,OAAA;IAAAa,QAAA,eACEb,OAAA;MAAAa,QAAA,eAEEb,OAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACC,EAAA,GArCQnB,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}